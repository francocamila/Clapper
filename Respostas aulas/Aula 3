Data: 22/03/2017

1. Dada uma variável 'a' do tipo 'char' (um byte), escreva os trechos de código em C para:
	(a) Somente setar o bit menos significativo de 'a'.
          a |= BIT0;
 
  
	(b) Somente setar dois bits de 'a': o menos significativo e o segundo menos significativo.
          a |= BIT0+BIT1;
    
 
	(c) Somente zerar o terceiro bit menos significativo de 'a'.
  
          a &= 0xFB;
 
  
	(d) Somente zerar o terceiro e o quarto bits menos significativo de 'a'.
          a &= 0xF3;
    
 
	(e) Somente inverter o bit mais significativo de 'a'.
         a ^= 0x80;
 
  
	(f) Inverter o nibble mais significativo de 'a', e setar o nibble menos significativo de 'a'. 
         a^= 0xF0;   

2. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar os dois LEDs ininterruptamente.

#include <msp430g2553.h>
#define LED1 BIT0
#define LED2 BIT6
void main(void)
{
 WDTCL = WDTPW | WDTHOLD;
 P1DIR = LED1+LED2;
 P1OUT = 0;
 for(;;)
 {
  P1OUT = LED1+LED2;
  _delay_cicles(50000);
  P1OUT = 0;
  _delay_cicles(50000);
 }
 }

3. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar duas vezes os dois LEDs sempre que o usuário pressionar o botão.


#include <msp430g2553.h>
#define BTN BIT3
#define LED1 BIT0
#define LED2 BIT6
void main(void)
{
 WDTCL = WDTPW | WDTHOLD;
 i=0;
 P1DIR = LED1+LED2;
 P1OUT = 0;
 for(i=0; i<=2; i++)
 {
 if(P1IN &BNT ==0)
  P1OUT |= LED1+LED2;
  _delay_cicles(50000);
  P1OUT = 0;
  _delay_cicles(50000);
  else
  P1OUT &= ~(LED1 +LED2)
 }
 }


4. Considerando a placa Launchpad do MSP430, faça uma função em C que pisca os dois LEDs uma vez.

#include <msp430g2553.h>
#define LED1 BIT0
#define LED2 BIT6
void main(void)
{
 WDTCL = WDTPW | WDTHOLD;
 i =0;
 P1DIR = LED1+LED2;
 P1OUT = 0;
 for( i=0; i<=1; i++)
 {
  P1OUT = LED1+LED2;
  _delay_cicles(50000);
  P1OUT = 0;
  _delay_cicles(50000);
 }
 }

5. Reescreva o código da questão 2 usando a função da questão 4.

6. Reescreva o código da questão 3 usando a função da questão 4.
